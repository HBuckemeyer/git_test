
Holger Buckemeyer@BGWSDEV04 MINGW64 ~
$ git --version
git version 2.30.1.windows.1

Holger Buckemeyer@BGWSDEV04 MINGW64 ~
$ git config --global user.name "Holger Buckemeyer"

Holger Buckemeyer@BGWSDEV04 MINGW64 ~
$ git config --global user.email "holger.buckemeyer@greenham.com"

Holger Buckemeyer@BGWSDEV04 MINGW64 ~
$ git config --list
diff.astextplain.textconv=astextplain
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
http.sslbackend=openssl
http.sslcainfo=C:/Program Files/Git/mingw64/ssl/certs/ca-bundle.crt
core.autocrlf=true
core.fscache=true
core.symlinks=false
core.editor="C:\\Program Files (x86)\\Notepad++\\notepad++.exe" -multiInst -notabbar -nosession -noPlugin
pull.rebase=false
credential.helper=manager-core
credential.https://dev.azure.com.usehttppath=true
init.defaultbranch=master
user.email=holger.buckemeyer@greenham.com
user.name=Holger Buckemeyer
core.longpaths=true

Holger Buckemeyer@BGWSDEV04 MINGW64 ~
$ git --help
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

Holger Buckemeyer@BGWSDEV04 MINGW64 /c/users/holger buckemeyer
$ mkdir git_test

Holger Buckemeyer@BGWSDEV04 MINGW64 /c/users/holger buckemeyer
$ cd git_test

Holger Buckemeyer@BGWSDEV04 MINGW64 /c/users/holger buckemeyer/git_test
$ git init
Initialized empty Git repository in C:/Users/holger buckemeyer/git_test/.git/

Holger Buckemeyer@BGWSDEV04 MINGW64 /c/users/holger buckemeyer/git_test (master)
$ echo "# wired-brain-recipes" >> README.md

Holger Buckemeyer@BGWSDEV04 MINGW64 /c/users/holger buckemeyer/git_test (master)
$ git add .
warning: LF will be replaced by CRLF in README.md.
The file will have its original line endings in your working directory

Holger Buckemeyer@BGWSDEV04 MINGW64 /c/users/holger buckemeyer/git_test (master)
$ git commit -m "first commit"
[master (root-commit) fabdef1] first commit
 1 file changed, 1 insertion(+)
 create mode 100644 README.md

Holger Buckemeyer@BGWSDEV04 MINGW64 /c/users/holger buckemeyer/git_test (master)
$ git remote add origin https://github.com/HBuckemeyer/git_test.git

Holger Buckemeyer@BGWSDEV04 MINGW64 /c/users/holger buckemeyer/git_test (master)
$ git push -u origin master
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Writing objects: 100% (3/3), 242 bytes | 80.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/HBuckemeyer/git_test.git
 * [new branch]      master -> master
Branch 'master' set up to track remote branch 'master' from 'origin'.

Holger Buckemeyer@BGWSDEV04 MINGW64 /c/users/holger buckemeyer/git_test (master)
$
